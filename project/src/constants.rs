pub const Q_: i128       = 170141183460469231731687303715884105727;

pub const ALPHA: i128   = 106501328597698759945921625639699515128;     // in F_q
pub const LAMBDA: i128  = 28356863910078205288614550619314017618;      // in F_q
pub const MU: i128      = 154040945529144206406682019582013187910;    //in F_q
pub const NU: i128      = 113206060534360680770189432771018826227;    //in F_q

pub const A_: i128 = 11; // F_q
pub const B_: i128 = 170141183460469231731687303715884105705; // F_q
pub const C_: i128 = 170141183460469231731687303715884105708; // F_q
pub const D_: i128 = 170141183460469231731687303715884105724; // F_q
pub const E_: i128 = 106501328597698759945921625639699515129; // F_q 1 + alpha
pub const F_: i128 = 63639854862770471785765678076184590600;  // F_q 1 - alpha

pub const A: i128 = 170141183460469231731687303715884105694; //a + b + c + d;  F_q
pub const B: i128 = 11;  // a + b - c - d; F_q
pub const C: i128 = 17;  // a - b + c - d; F_q
pub const D: i128 = 55;  // a - b - c - d; F_q


//  matrix M for transfer from general to fast
pub use nalgebra::Matrix4;
pub const M: Matrix4<i128> = Matrix4::new(
    21611190839118897829669051865764687498,
    164607414764843396375738471163320399679,
    65851068259032113146051924909304779964,
    120367537344930181059355598119780307213,
    16100237931325025325005284133870917817,
    46560355347948564264173146962438755886,
    56935122926108550961497870944865279500,
    90800232767861779580556020005978848352,
    154040945529144206406682019582013187911,
    141562924444438886058803983390332843845,
    113206060534360680770189432771018826228,
    12256625978753179963609266485443099801,
    170141183460469231731687303715884105726,
    170141183460469231731687303715884105726,
    170141183460469231731687303715884105726,
    170141183460469231731687303715884105726
);